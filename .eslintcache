[{"/Users/smastromattei/Desktop/cypress-wait-frames/cypress.config.ts":"1","/Users/smastromattei/Desktop/cypress-wait-frames/cypress/support/component.ts":"2","/Users/smastromattei/Desktop/cypress-wait-frames/src/index.ts":"3","/Users/smastromattei/Desktop/cypress-wait-frames/tests/App.cy.tsx":"4","/Users/smastromattei/Desktop/cypress-wait-frames/cypress/support/commands.ts":"5"},{"size":156,"mtime":1674244392560,"results":"6","hashOfConfig":"7"},{"size":258,"mtime":1674249889730,"results":"8","hashOfConfig":"9"},{"size":4088,"mtime":1674249681039,"results":"10","hashOfConfig":"9"},{"size":1416,"mtime":1674251120311,"results":"11","hashOfConfig":"9"},{"size":553,"mtime":1674249674958,"results":"12","hashOfConfig":"9"},{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ytandq",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"58cbey",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/smastromattei/Desktop/cypress-wait-frames/cypress.config.ts",[],[],"/Users/smastromattei/Desktop/cypress-wait-frames/cypress/support/component.ts",[],["28"],"/Users/smastromattei/Desktop/cypress-wait-frames/src/index.ts",["29","30"],["31"],"/Users/smastromattei/Desktop/cypress-wait-frames/tests/App.cy.tsx",[],[],"/Users/smastromattei/Desktop/cypress-wait-frames/cypress/support/commands.ts",[],["32"],{"ruleId":"33","severity":2,"message":"34","line":6,"column":2,"nodeType":"35","messageId":"36","endLine":10,"endColumn":3,"suppressions":"37"},{"ruleId":"38","severity":1,"message":"39","line":94,"column":36,"nodeType":"40","messageId":"41","endLine":94,"endColumn":39,"suggestions":"42"},{"ruleId":"38","severity":1,"message":"39","line":103,"column":43,"nodeType":"40","messageId":"41","endLine":103,"endColumn":46,"suggestions":"43"},{"ruleId":"33","severity":2,"message":"34","line":3,"column":2,"nodeType":"35","messageId":"36","endLine":7,"endColumn":3,"suppressions":"44"},{"ruleId":"33","severity":2,"message":"34","line":7,"column":2,"nodeType":"35","messageId":"36","endLine":11,"endColumn":3,"suppressions":"45"},"@typescript-eslint/no-namespace","ES2015 module syntax is preferred over namespaces.","TSModuleDeclaration","moduleSyntaxIsPreferred",["46"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["47","48"],["49","50"],["51"],["52"],{"kind":"53","justification":"54"},{"messageId":"55","fix":"56","desc":"57"},{"messageId":"58","fix":"59","desc":"60"},{"messageId":"55","fix":"61","desc":"57"},{"messageId":"58","fix":"62","desc":"60"},{"kind":"53","justification":"54"},{"kind":"53","justification":"54"},"directive","","suggestUnknown",{"range":"63","text":"64"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"63","text":"65"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"66","text":"64"},{"range":"66","text":"65"},[2305,2308],"unknown","never",[2514,2517]]